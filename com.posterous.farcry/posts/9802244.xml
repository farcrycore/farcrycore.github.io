<item>
	<title>Firing a ft:processForm with skin:buildLink</title>
	<link>http://farcry.posterous.com/firing-a-ftprocessform-with-skinbuildlink</link>
	<pubDate>Mon Jan 11 21:01:00 -0800 2010</pubDate>
	
	<dc:creator><![CDATA[Rob]]></dc:creator>
	
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://farcry.posterous.com/firing-a-ftprocessform-with-skinbuildlink</guid>
	<description></description>
	<content:encoded><![CDATA[<p>As you likely know ft:processForm is used quite frequently in FarCry to handle form posts - the "action page" for the old-school developers out there. A very simple ft:processForm tag looks like the following: <p /> <p><a href="https://gist.github.com/274936">https://gist.github.com/274936</a></p><p /> The above code simply outputs "Blarg" and a timestamp. To get this code to run, you would typically create an ft:form with an ft:button like so: <p /> <p><a href="https://gist.github.com/274940">https://gist.github.com/274940</a></p><p /> The "value" attribute on the ft:button corresponds to the "action" attribute on the ft:processForm. The "value" to "action" matching will cause the block of code to run (thereby supporting many buttons to many actions on the same form). <p /> ft:button has several attributes to alter the display the button <a href="http://docs.farcrycore.org/trunk/tags/farcry-core-tags-ft-button.html">http://docs.farcrycore.org/trunk/tags/farcry-core-tags-ft-button.html</a> - renderType, Class, and Style for example. <p /> However, sometimes you need more control over a form submission element. Perhaps you need a graphic *and* a bit of text, or you want to wrap a div with a link (which isn't valid, but who am I to judge.)  In cases where you need more control over the contents of the form submission link you can use skin:buildLink. <p /> To use skin:buildLink you simply supply the "href" attribute with the javascript function "btnSubmit". The "btnSubmit" function is what ft:button winds up calling. "btnSubmit" takes two parameters - the form name, and the action to perform. To change the ft:button example above to be a skin:buildLink call we could do the following: <p /> <p><a href="https://gist.github.com/274939">https://gist.github.com/274939</a></p><p /> Of course, you have to include the skin tag library as well as the formtool library: <p /> <p><a href="https://gist.github.com/274937">https://gist.github.com/274937</a></p></p>]]></content:encoded>
	<excerpt:encoded><![CDATA[As you likely know ft:processForm is used quite frequently in FarCry to handle form posts - the "action page" for the old-school developers out there. A very simple ft:processForm tag looks like the following: The above code simply outputs "Blarg"...]]></excerpt:encoded>	

	<wp:post_date>Mon Jan 11 21:01:00 -0800 2010</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name></wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
