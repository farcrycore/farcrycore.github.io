<item>
	<title>getNavID() replaces application.navid</title>
	<link>http://farcry.posterous.com/getnavid-replaces-applicationnavid</link>
	<pubDate>Mon Apr 05 23:17:24 -0700 2010</pubDate>
	
	<dc:creator><![CDATA[Geoff Bowers]]></dc:creator>
	
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://farcry.posterous.com/getnavid-replaces-applicationnavid</guid>
	<description></description>
	<content:encoded><![CDATA[application.navid's should never be referenced directly in code anymore. The problem with referencing these application variables directly is if for any reason the alias doesn't exist you will end up with a broken page. Besides it's just plain bad coding practice. <p /> The right way is to use the FarCry API (fapi) function: <p /> ex: application.fapi.getNavID("signupenews","home") <p /> The second parameter is the default fallback node to use in the event the primary is not created. "home" is the safety fallback as it always exists. <p /> Thanks to Jasbar for this insight ;) <p /> PS. NavID's are a great way to nominate an alias for a specific point in the tree (there's also a similar catid concept for categories). You create NavID's by adding an "alias" to the relevant navigation folder content item in the site overview tree. You can then refer to this alias in your code. If the position in the tree changes, just change the alias. Beats hardcoding UUIDs.]]></content:encoded>
	<excerpt:encoded><![CDATA[application.navid's should never be referenced directly in code anymore. The problem with referencing these application variables directly is if for any reason the alias doesn't exist you will end up with a broken page. Besides it's just plain bad...]]></excerpt:encoded>	

	<wp:post_date>Mon Apr 05 23:17:24 -0700 2010</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name></wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
