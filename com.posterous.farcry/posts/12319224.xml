<item>
	<title>Changing a form's ft:object label</title>
	<link>http://farcry.posterous.com/changing-a-forms-ftobject-label</link>
	<pubDate>Thu Feb 25 15:52:00 -0800 2010</pubDate>
	
	<dc:creator><![CDATA[Rob]]></dc:creator>
	
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://farcry.posterous.com/changing-a-forms-ftobject-label</guid>
	<description></description>
	<content:encoded><![CDATA[<p>When you are making a custom form that is backed by a ContentType, you might sometimes want to display the label differently then it is defined in the ContentType's metadata. For example, lets say you want to change the "Username" label on the log in screen to "Staff ID" - a form backed by farLogin. <p /> There are a couple ways to change the label on a global level, from extending the ContentType into your project to using FarCry's internationalization mechanism; however, using either one of those solutions is a bit over kill when you just want to change a single label on a single page. <p /> If you have a look at the ft:object's (the default way to render a ContentType's property as a form control - Example A below) documentation ( <a href="http://docs.farcrycore.org/trunk/tags/farcry-core-tags-ft-object.html">http://docs.farcrycore.org/trunk/tags/farcry-core-tags-ft-object.html</a> ) you'll notice there is no "label" attribute. The reason ft:object does not have a "label" attribute is because ft:object can take a list of ContentType's properties it should render (see Example D below). <p /> Ok, enough backstory, how do you change just the label of a single ft:object call? There are two ways to do it depending on how your form is setup. <p /> First you can just have the ft:object not render a label at all. Just set the IncludeLabel attribute to false and the control will render without the label. However, if you are trying to change the label of a form control that is on a longer form, this method might not be the best. While IncludeLabel="false" does indeed not include the label, it also suppress's some surrounding div's that might make your form look out of wack. If you just want the raw control form control, however, this is for you. <p /> The second way is if you want everything to work exactly as it normally does, but you just want the label different (finally some brass tacks!). What you have to do is setup a structure that will override parts of the internal FarCry form structure (see Example C below). When you pass in a structure to the stPropMetadata attribute in the form of [structure].[field_name].ftLabel, you can then set the label to be whatever you like. If you are using an ft:object with several fields, you can override any or just one of them using this technique by having [field_name] match the name of the lFields. <p /> One small word or warning however. The second, stPropMetadata, method is like using a "style" attribute on an HTML element. It is helpful when you need it, but should be used sparingly and if possible should be avoided - but good to know it's there when you are in a pinch. <p /> <p><a href="https://gist.github.com/315178">https://gist.github.com/315178</a></p></p>]]></content:encoded>
	<excerpt:encoded><![CDATA[When you are making a custom form that is backed by a ContentType, you might sometimes want to display the label differently then it is defined in the ContentType's metadata. For example, lets say you want to change the "Username" label on the log...]]></excerpt:encoded>	

	<wp:post_date>Thu Feb 25 15:52:00 -0800 2010</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name></wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
