<item>
	<title>How do you structure your source code? </title>
	<link>http://farcry.posterous.com/how-do-you-structure-your-source-code</link>
	<pubDate>Wed Jan 13 08:04:27 -0800 2010</pubDate>
	
	<dc:creator><![CDATA[Geoff Bowers]]></dc:creator>
	
	
		<category domain="tag" nicename="installation"><![CDATA[installation]]></category>
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://farcry.posterous.com/how-do-you-structure-your-source-code</guid>
	<description></description>
	<content:encoded><![CDATA[When we're working on FarCry project's of our own this is how we put together or code bases. <p /> Any FarCry installation is made up of several separate modules: the FarCry framework, a collection of plugins (each defining some discrete functionality or service), and the website project. Each module is independently managed in version control with distinct branches and tag releases. <p /> Deployments are managed by the creation of a “distribution”. A distribution is a collection of tagged releases of the underlying modules arranged in the expected deployment structure. The distribution itself is under version control with its own distinct tag releases. <p /> When deploying to production (or the QA server), a specific tagged release of the distribution is checked out. <p /> This approach allows us to isolate key feature sets to aid in development, quality assurance and integration. But at the same time providing a single versioned “distribution” to facilitate deployment of new releases, and simplify the rollback of defective releases to known quality builds. <p /> Note, we make a clear distinction in the code structure between code (plus any associated fixed media assets such as icons, chrome, etc), and content that is managed by the solution. We have a strict policy that content managed assets such as images and files are excluded from version control. <p /> Content managed assets need to be backed up from an appropriate location in the production environment. <p /> Reconstructing the production environment for the purposes of rolling back a code release does not typically involve content managed assets and can be done by reverting to a specific revision of the distribution. In the event of disaster recovery we would expect to go to the production backups to restore the environment.]]></content:encoded>
	<excerpt:encoded><![CDATA[When we're working on FarCry project's of our own this is how we put together or code bases. Any FarCry installation is made up of several separate modules: the FarCry framework, a collection of plugins (each defining some discrete functionality o...]]></excerpt:encoded>	

	<wp:post_date>Wed Jan 13 08:04:27 -0800 2010</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name></wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
