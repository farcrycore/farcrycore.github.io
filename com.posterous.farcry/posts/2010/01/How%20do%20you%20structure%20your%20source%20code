<!DOCTYPE html>
<html>
<head>
<meta charset='utf-8'>
<link href='../../../exports.css' rel='stylesheet'>
<link href='../../../exports.css' rel='stylesheet'>

</head>
<body>
<div id='wrap'>
<div id='header'>
<h1>farcry cms</h1>
<h2>This is an archived post
This is an archived post
</h2>
</div>
<div id='content'><div id='nav'>
<a href="../../../posts/2010/01/Slideshow%20Gallery%20Plugin%20-9948784.html">Previous</a>
&nbsp; 
<a href="../../../index-6.html">Index</a>
&nbsp; 
<a href="../../../posts/2010/01/Firing%20a%20ft:processForm%20with%20skin:buildLink-9802244.html">Next</a>
</div>
<div class='post'>
<div class='post_header'>
<h3>How do you structure your source code? </h3>
<div class='post_info'>
<span class='post_time'>January 13 2010,  8:04 AM</span>
<span class='author'>&nbsp;by Geoff Bowers</span>
</div>
</div>
<div class='post_body'>When we're working on FarCry project's of our own this is how we put together or code bases. <p /> Any FarCry installation is made up of several separate modules: the FarCry framework, a collection of plugins (each defining some discrete functionality or service), and the website project. Each module is independently managed in version control with distinct branches and tag releases. <p /> Deployments are managed by the creation of a “distribution”. A distribution is a collection of tagged releases of the underlying modules arranged in the expected deployment structure. The distribution itself is under version control with its own distinct tag releases. <p /> When deploying to production (or the QA server), a specific tagged release of the distribution is checked out. <p /> This approach allows us to isolate key feature sets to aid in development, quality assurance and integration. But at the same time providing a single versioned “distribution” to facilitate deployment of new releases, and simplify the rollback of defective releases to known quality builds. <p /> Note, we make a clear distinction in the code structure between code (plus any associated fixed media assets such as icons, chrome, etc), and content that is managed by the solution. We have a strict policy that content managed assets such as images and files are excluded from version control. <p /> Content managed assets need to be backed up from an appropriate location in the production environment. <p /> Reconstructing the production environment for the purposes of rolling back a code release does not typically involve content managed assets and can be done by reverting to a specific revision of the distribution. In the event of disaster recovery we would expect to go to the production backups to restore the environment.</div>
<div class='post_tags'>
<h4>Tags</h4>
<div class='post_tags_list'>installation</div>
</div>
<div class='post_responses'>
<h4>1863 views and 0 responses</h4>
<ul class='post_responses list'>
</ul>
</div>
</div>
</div>
</div>
</body>
</html>
